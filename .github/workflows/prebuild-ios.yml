name: Regenerate iOS Folder

on:
  workflow_dispatch: # run manually

jobs:
  regen-ios:
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # needed if pushing back

      - name: 🟢 Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: 📦 Install Dependencies
        run: |
          npm ci
          npx expo install --fix

      - name: 🧹 Remove old ios folder
        run: rm -rf ios

      - name: ⚙️ Run expo prebuild (iOS only)
        run: npx expo prebuild --platform ios --clean --no-install

      - name: 🧩 Patch Podfile
        run: |
          cat > ios/Podfile <<'EOF'
require File.join(File.dirname(`node --print "require.resolve('expo/package.json')"`), "scripts/autolinking")
require File.join(File.dirname(`node --print "require.resolve('react-native/package.json')"`), "scripts/react_native_pods")

require 'json'
podfile_properties = JSON.parse(File.read(File.join(__dir__, 'Podfile.properties.json'))) rescue {}

ENV['RCT_NEW_ARCH_ENABLED'] = '0' if podfile_properties['newArchEnabled'] == 'false'
ENV['EX_DEV_CLIENT_NETWORK_INSPECTOR'] = podfile_properties['EX_DEV_CLIENT_NETWORK_INSPECTOR']

platform :ios, podfile_properties['ios.deploymentTarget'] || '15.1'
install! 'cocoapods',
  :deterministic_uuids => false

prepare_react_native_project!

target 'BarPals' do
  use_expo_modules!
  use_modular_headers!
  config = use_native_modules!

  post_install do |installer|
    react_native_post_install(installer)
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings["EXCLUDED_ARCHS[sdk=iphonesimulator*]"] = "arm64"
      end
    end
  end
end
EOF

      # Option A: Push the regenerated ios folder back to the repo
      - name: 🚀 Commit and Push Changes
        if: ${{ github.actor != 'github-actions[bot]' }}
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add ios
          git commit -m "🤖 Regenerated ios folder via GitHub Action"
          git push

      # Option B: Upload ios folder as downloadable artifact
      - name: 🗃️ Upload iOS Folder as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-folder
          path: ios
